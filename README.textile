h1. Codeigniter-Migrations

h3. Contributors

	Phil Sturgeon
	http://philsturgeon.co.uk/

	webPragmatist <chris@webPragmatist.com>
	http://www.webPragmatist.com/

	Spicer Matthews <spicer@cloudmanic.com>
	Cloudmanic Labs, LLC
	http://www.cloudmanic.com

Based On:
	http://codeigniter.com/wiki/Migrations/
	By: Mat'as Montes
	
h3. About

	An open source utility for Codeigniter inspired by Ruby on Rails.

	The one thing Ruby on Rails has that Codeigniter does not have built in
	is database migrations. That function to keep track of database chages (versions)
	and migrate your database to what ever version you need. Migrate up or migrate down.
	With this library you can now do this. This library is not complete, please read
	http://codeigniter.com/wiki/Migrations for future needs and issues. This "fork" of 
	Mat'as orginal work just tweets something to work better in our work. Both Libraries
	are powerful and work in nearly the same way. Maybe someday we can create a joint project 
	with Mat'as or even better get this into that core of Codeigniter.

h3. Install

	Copy the files to these locations.
	
	config/migrations.php -> application/config/
	libraries/Migrations.php -> application/libraries/
	controllers/migrate.php -> applcation/controllers/

	The migration files included in this are just examples. You should install them where ever you 
	point your $config["migrations_path"] to.
 
h3. Usage
	
	$this->load->library('migrations');
	$this->migrations->set_verbose(TRUE); // echo statments or not
	$this->migrations->version(id); // migrate the database to a particular version
	$this->migrations->install(); // install to the latest version.

	The migreate.php controller just shows the use of these functions. If you are going to use it.
	comment out the show_error() in the construct, and put it back in place when you are done.
	
	-System configury code gone-
	
	-In this code we set. $this->config->item('migration_version'); and that is how _get_schema_version() 
	gets the current version. This is the version this database is set too.-

	// Make sure our database is up-to-date
	if ( ! $this->migration->version($this->config->item('migrations_version')))
	{
		show_error($this->migration->error);
	}

	Over all you should read this and http://codeigniter.com/wiki/Migrations to get an over all feel for this and make any changes 
	you need for your applcation.

Other Helpful Stuff:

Included in this git repo is an example CodeIgniter Hook and a basic config/hooks.php to show
how to enable it. This hook is one of several ways to have migrations run on every page load. You
could also place the code into a MY_Controller.

Here is a video walk through of migrations in action. 

http://www.vimeo.com/13490644
